1.
es werden 2 zusäzliche zugriffe benötigt also 3

2.
Virtual Address: 15bit -> 10 VPN, 5 offset
[VPN | offset]
-> VPN => [PDI:5 | PTI:5] (Page Directory Index | Page Table Index)

Physical Addres 12bit -> 7 PFN, 5 offset
[PFN | offset]

Bsp:
PDBR: 108  (decimal) [This means the page directory is held in this page]
Virtual Address 3e99: Translates To What Physical Address (And Fetches what Value)? Or Fault?
|
v
3e99 -> 011 1110 1001 1001 -> Virtual Address: 01111 10100 11001 [VPN:10 | offset:5]
|
v
./paging-multilevel-translate.py | grep "page 108"
page 108: 83 fe e0 da 7f d4 7f eb be 9e d5 ad e4 ac 90 d6 92 d8 c1 f8 9f e1 ed e9 a1 e8 c7 c2 a9 d1 db ff
|
v
Virtual Address: '01111' 10100 11001 ->  PDI: 01111 -> 15 -> spalte 15 in page 108 (von 0 angefangen)
|
v
page 108: 83 fe e0 da 7f d4 7f eb be 9e d5 ad e4 ac 90 'd6' 92 d8 c1 f8 9f e1 ed e9 a1 e8 c7 c2 a9 d1 db ff
	   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 '15' 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
|
v
PDE(Page Directory Entry): d6 -> 1101 0110 -> 1 1010110 [Valid Bit:1 | PFN(Page Frame Number): 7]
|
v
PFN: 1010110 -> 86 => page 86
./paging-multilevel-translate.py | grep "page  86"
page  86: 7f 7f 7f 7f 7f 7f 7f c5 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f ca 7f 7f ee 7f 7f 7f 7f 7f 7f 7f 7f
|
v
Virtual Address: 01111 '10100' 11001 ->  PTI: 10100 -> 20 -> spalte 20 in page 86 (von 0 angefangen)
page  86: 7f 7f 7f 7f 7f 7f 7f c5 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 'ca' 7f 7f ee 7f 7f 7f 7f 7f 7f 7f 7f
	   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 '20' 21 22 23 24 25 26 27 28 29 30 31
|
v
PTE(Page Table Index): ca -> 1100 1010 -> 1 1001010 [Valid Bit:1 | PFN(Page Frame Number): 7]
|
v
PFN: 1001010 -> page 74
./paging-multilevel-translate.py | grep "page  74"
page  74: 0d 0b 1e 08 18 0d 0b 01 1a 15 1b 0d 14 03 0c 06 01 1d 06 04 06 0b 10 04 1e 1e 04 0c 15 1b 0f 1c
|
v
Virtual Address: 01111 10100 '11001' ->  offset: 11001 -> 25 -> spalte 25 in page 74 (von 0 angefangen)
page  74: 0d 0b 1e 08 18 0d 0b 01 1a 15 1b 0d 14 03 0c 06 01 1d 06 04 06 0b 10 04 1e '1e' 04 0c 15 1b 0f 1c
	   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 '25' 26 27 28 29 30 31
|
v
DATA: 1e
|
v
Physical Addres = PTE(PFN) + Virtual Address(offset) => 1001010 11001 -> 1001 0101 1001
=> Physical Address: 0x959

 ./paging-multilevel-translate.py -c | tail -5
Virtual Address 3e99:
  --> pde index:0xf [decimal 15] pde contents:0xd6 (valid 1, pfn 0x56 [decimal 86])
    --> pte index:0x14 [decimal 20] pte contents:0xca (valid 1, pfn 0x4a [decimal 74])
      --> Translates to Physical Address 0x959 --> Value: 1e


-------------------------------------------------------------------------------
PDBR: 108  (decimal) [This means the page directory is held in this page]
Virtual Address 17f5: Translates To What Physical Address (And Fetches what Value)? Or Fault?

17f5 -> 0001 0111 1111 0101 -> 00101 11111 10101
=> 00101 -> 5
|
v
 ./paging-multilevel-translate.py | grep "page 108"
page 108: 83 fe e0 da 7f 'd4' 7f eb be 9e d5 ad e4 ac 90 d6 92 d8 c1 f8 9f e1 ed e9 a1 e8 c7 c2 a9 d1 db ff
=> fünfte stelle -> 'd4' -> 1101 0100 -> 1 1010100 Valid! -> 1010100 => 84 (page)
|
v
 ./paging-multilevel-translate.py | grep "page  84"
page  84: 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 94 7f 7f 7f 7f 7f 'ce'
11111 -> spalte(31) => 'ce' -> 1100 1110 -> 1 1001110 Valid
|
v
1001110 -> 78 page
./paging-multilevel-translate.py | grep "page  78"
page  78: 0e 02 17 1b 1c 1a 1b 1c 10 0c 15 08 19 1a 1b 12 1d 11 0d 14 1e 1c 18 02 12 0f 13 1a 07 16 03 06
10101 -> spalte(10) => '15' -> 0001 0101
DATA: 0x15 oder 00010101
Physical Address: PFN(1001110) + offset(10101) => 1001 1101 0101 -> 9d5
=> Physical Adresse: 0x9d5

Merken:
Wenn einer der beiden Valid bits 0 ist dan ist es Falsch.
pde valid bit 0
--> Fault (page directory entry not valid)
pte valid bit 0
 --> Fault (page table entry not valid)








